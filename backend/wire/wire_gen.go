// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wire

import (
	"context"

	"github.com/AliceOrlandini/Auto-Light-Pi/config"
	"github.com/AliceOrlandini/Auto-Light-Pi/controllers"
	"github.com/AliceOrlandini/Auto-Light-Pi/repositories"
	"github.com/AliceOrlandini/Auto-Light-Pi/routes"
	"github.com/AliceOrlandini/Auto-Light-Pi/services"
	"github.com/gin-gonic/gin"
)

// Injectors from injection.go:

func InitializeServer(ctx context.Context) (*gin.Engine, error) {
	postgresDB, err := ProvidePostgresDB(ctx)
	if err != nil {
		return nil, err
	}
	redisDB, err := ProvideRedisDB(ctx)
	if err != nil {
		return nil, err
	}
	userRepository := repositories.NewUserRepository(postgresDB)
	refreshTokenRepository := repositories.NewRefreshTokenRepository(redisDB)
	authService := services.NewAuthService(userRepository, refreshTokenRepository)
	authController := controllers.NewAuthController(authService)
	initialization := config.NewInitialization(userRepository, authService, authController)
	engine := routes.SetupRoutes(initialization)
	return engine, nil
}
